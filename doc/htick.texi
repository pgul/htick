\input texinfo   @c -*-texinfo-*-

@c %**start of header
@c $Id$
@c adopted from hpt.texi, written by Tema Zelikin 2:5097/31
@setfilename htick.info
@set HTICK HTICK
@set VERSION 1.0-stable
@settitle @value{HTICK} @value{VERSION} - Husky Ticker
@setchapternewpage odd
@c %**end of header

@titlepage
@title @value{HTICK} @value{VERSION} manual
@subtitle Husky Ticker
@author Georgi Fofanov @@ 2:5050/29, fg@fg.udm.ru
@author Nestyurkin Nikolay @@ 2:5020/3600, 3600@mail.ru
@author Max Chernogor @@ 2:464/108, mche@ua.fm
@page
@c{empty page to get the page numbering right}
@end titlepage

@ifinfo
@dircategory Fidonet Software
@direntry
* HTICK: (htick).               HTICK is fidonet fileecho processor
@end direntry
@end ifinfo

@iftex
@parindent=0pt
@end iftex
@iftex
@afourpaper
@end iftex

@node Top, Overview, (dir), (dir)
@top @value{HTICK}
This document describes @value{HTICK} @value{VERSION}, a Fidonet Fileecho
Processor for OS/2, Windows, BeOS and Unix.

@menu
* Overview::                    What is @value{HTICK}?
* Installation::                Installation. @emph{Read this!}
* Command Line::                Command Line OPTIONS and SWITCHES
* Configuration Reference::     Explanation of the configuration file.
* Support::                     Support information.
* Keyword Index::               Configuration File Keywords Index
@end menu

@node Overview, Installation, Top, Top
@chapter An Overview of @value{HTICK}

@value{HTICK} is a Fidonet file areas tosser with filefix. Now project 
supported by Husky Development Team.

Features of @value{HTICK}:
@enumerate
@item tossing file areas
@item filefix (on the fly, from command line, limit for areas...)
@item autocreate on the fly
@item forward requests
@item posting to net & echo areas
@item pause and autopause for links
@item groups & levels for personal and public access to file areas
@item security check of tossgroup
@item dupe checking
@item link defaults
@item much, much more :)
@end enumerate

The advantages of @value{HTICK} are:

@enumerate
@item Open Source (GPL)
@item many supported platforms & operating systems
@item quick bug fixing
@end enumerate

@node Installation, Download, Overview, Top
@chapter Installation Procedures and Release Notes
This chapter provides you with information that is necessary to successfully
install and use @value{HTICK}.

I suppose, that you already has compiled binaries. If not - read "Download"
or "Compile the Source Code" chapters.

@enumerate
@item Read FIDOCONFIG documentation about location of config-file
@item Edit config files for your purposes
@item Run @code{tparser} from FIDOCONFIG package to test your config
(read about @code{PublicGroup} or @code{AccessGrp} if you want to use
groups for @code{FileEchoAreas})
@item It is simply, isn't it? Enjoy! :-)
@end enumerate

@menu
* Download::            Download the Source Code & Binary Files
* Compiling::           How to compile the source code
* Support::             Support, Contacting the Author, Reporting Bugs, Contributing Code
@end menu

@node Download, Compiling, Installation, Installation
@section Download the Source Code & Binary Files

@table @asis
@item Main page (source code, win32 & os/2 releases) - @url{http://husky.sf.net/htick.html}
@item Win32 bins (current, russian) - @url{http://hpt-bin.narod.ru}
@end table

@node Compiling, Support, Download, Installation
@section Compiling the Source Code

1. The smapi and fidoconf packages are required for htick.

2. Put the fidoconfig ans smapi packages to the directory where the
   other packages of fido linux reside:

@table @asis
@item /usr/src/packages/
@item -> smapi/
@item -> htick/
@item -> fidoconfig/
@end table

3. Compile and install smapi and fidoconf packages. Use "Makefile" for
   dynamic executables and makefile.lnx (or what you need) for static
   ones.

4. Compile and install @value{HTICK}:
@table @asis
@item $ make
@item $ make install
@end table
You should use the _same_ makefiles in smapi, fidoconf and htick.

@node Support, Command Line, Compiling, Installation
@section Support

There are numerous reasons why you might wish to establish contact with developers.

@enumerate
@item
You have decided to use @value{HTICK} on a regular basis. In this case,
please do send a netmail at the address listed below.

@item
You have a general questions on how to configure or on how to use a certain
feature of @value{HTICK}. In other words, you need support. In this case,
you'd best post your question to one of the following echos:

@table @code
@item FIDOSOFT.HUSKY
The international Husky conference. English is the preferred language here.
@item RU.HUSKY
This Russian echo covers Husky Project.
@end table

If you do not have access to any of these echos, you may of course also
contact developers via netmail or e-mail at the addresses listed below.

@item
You want to report a bug. There are two sorts of bugs:

@enumerate a
@item Normal bugs.
You think that a certain function of @value{HTICK} does not work as expected,
e.g. it is producing garbage, or doing strange things, or similar. In this
case, either post to the echos listed above, or contact developers via
netmail. Please do supply all information that is necessary to understand
your problem.

@item Fatal bugs.
A fatal bug occurs if @value{HTICK} crashes. Depending on your operating
system, the symptom might be a core dump, or a SYS 3175, or a general
protection fault, or a system lockup, or a spontaneous reboot. I do consider
a crash untolerable. No matter how stupid things you do, you should not be
able to crash @value{HTICK}.

If you are experienced user and get core dump, you can send developers gdb
report. If you have a crash, locate @file{core} file that has been
generated. Then run $ gdb htick core, type where. @value{HTICK} must be
compiled with debug information (DEBUG=1 in @file{huskymak.cfg} file).
Then send report to addresses below.

If you are running any other binary version (like Windows), you will not
get a core file on a crash. Write down as much information as you can,
try to find a way to reproduce the crash and contact me at the addresses
below. We need log-file with @code{loglevels 1-0A-Za-z}.
@end enumerate

@item You want to contribute to @value{HTICK}.
If you are a programmer and have fixed a problem in @value{HTICK} on your
own, please submit your changes to me. The preferred way for doing so is to
send to developers a difference file in GNU diff format (with -c parameter).
Your work will be highly appreciated and honored in an appropriate place.
If you want to regularly work on @value{HTICK}, we also have a CVS server
online that you can have access to if you like.

If you want to write a new feature for @value{HTICK}, please contact developers
beforehand to avoid that we do duplicate work. Again, I will appreciate and
honor any efforts done by you. Please note that for writing a @value{HTICK}
enhancement, you should be familiar with C. Also, @value{HTICK} uses a
special indentation style throughout the source code, that I would like
you to adhere to.
@end enumerate

So here are developers addresses if you want to get in contact with us:

@itemize @bullet
@item Fidonet:
Max Chernogor @@ 2:464/108
@item e-mail:
mche@@ua.fm

@end itemize
@itemize @bullet
@item Fidonet:
Stas Degteff @@ 2:5080/102.1
@item e-mail:
stas_degteff@@users.sf.net
@end itemize


@node Command Line, Configuration Reference, Support, Top
@chapter @value{HTICK} @value{VERSION} Command Line OPTIONS and SWITCHES
To get help about the command line syntax, use @value{HTICK} without any arguments


@node Configuration Reference, Keywords, Command Line, Top
@section Configuration Reference
@chapter @value{HTICK} @value{VERSION} Configuration Reference

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file and keywords ideology.

@menu
* Keywords::                    This chapter describes keywords
* Link Keywords::               Keywords, that can be repeated for different links
* FileArea Definition::         FileAreas definition
@end menu

@node Keywords, FileAreaBaseDir, Configuration Reference, Configuration Reference
@section Keywords

@menu
* FileAreaBaseDir::             Base directory for FileAreas
* PassFileAreaDir::             In this directory shall be put files from Passthrough File areas (and TICs, if not define ticOutbound).
* FileDescPos::                 The number of spaces to indent long descriptions in FILES.BSS. Recommend: 13 (8.3+space)
* fileLDescString::             This string is put before long descriptions in FILES.BBS. (Usually ">" or "+".) Default value: single space.
* FileFixHelp::                 Help file for FileFix, same as AreaFixHelp for AreaFix
* FileArea::                    Same as EchoArea, most options are valid
* ExecOnFile::                  Execute some command on receiving file. Command get full filepath as parameter(space and file pathname to be append to command string before execution).
* SaveTic::                     Save files with tics
* MaxTicLineLength::            Set maximum line length in outgoing TICs to number.
* BusyFileDir::                 Where shall be put TICs for busy links
* ConvertLongNames::            What to do with long names when toss or hatch.
* ConvertShortNames::           What to do with short names when toss or hatch.
* addDLC::                      Add Download counters to files.bbs. 
* DLCDigits::                   How much digits DLC must be. DLC have [000] form.
* ticOutbound::                 TICs are stored here and killed after transmission
* filefixKillReports::          Set kill/sent flag to filefix replies.
* filefixKillRequests::         Kill filefix request after processing.
* bbsarea::                     File area without subscribing, not show in filefix reports.
* fileDescName::                If no LDESC defined in tic file, use <name> file from archive fill it (usuallyfile_id.diz).
* FileAreaCreatePerms::         Define permissions for newly created filearea directories (UNIX only)
* FileFixFromName::             Originator name in filefix replies.
* AutoFileCreateFlag::          Create flag when filearea has been autocreated
* FileFixNames::                Set of names separated by space on which FileFix will respond
@end menu

@node FileAreaBaseDir, PassFileAreaDir, Keywords, Keywords
@subsection FileAreaBaseDir
@findex FileAreaBaseDir
@table @asis
@item Syntax:
@code{FileAreaBaseDir <directory>}
@item Example:
@code{FileAreaBaseDir /var/spool/fido/fileareas}
@end table

Where the directories for all Fileareas shall be made at autocreate. Same as MsgBaseDir.

This statement cannot be repeated.

@node PassFileAreaDir, FileDescPos, FileAreaBaseDir, Keywords
@subsection PassFileAreaDir
@findex PassFileAreaDir
@table @asis
@item Syntax:
@code{PassFileAreaDir <directory>}
@item Example:
@code{PassFileAreaDir /var/spool/fido/transit}
@end table

Where shall be put files from Passthrough File areas (and TICs, if ticOutbound is not defined).

This statement cannot be repeated.

@node FileDescPos, fileLDescString, PassFileAreaDir, Keywords
@subsection FileDescPos
@findex FileDescPos
@table @asis
@item Syntax:
@code{FileDescPos <number>}
@item Example:
@code{FileDescPos 13}
@end table

The number of spaces to indent long descriptions in FILES.BBS. Recommend: 13 (8.3+space)

This statement cannot be repeated.

@node fileLDescString, FileFixHelp, FileDescPos, Keywords
@subsection fileLDescString
@findex fileLDescString
@table @asis
@item Syntax:
@code{fileLDescString <string>}
@item Example:
@code{fileLDescString ">"}
@end table

This string is put before long descriptions in FILES.BBS (Usually ">" or "+".). 
Default value: single space.

This statement cannot be repeated.

@node FileFixHelp, ExecOnFile, fileLDescString, Keywords
@subsection FileFixHelp
@findex FileFixHelp
@table @asis
@item Syntax:
@code{FileFixHelp <string>}
@item Example:
@code{FileFixHelp /usr/local/fido/filefix.hlp}
@end table

Help file for FileFix, same as AreaFixHelp for AreaFix

This statement cannot be repeated.

@node ExecOnFile, SaveTic, FileFixHelp, Keywords
@subsection ExecOnFile
@findex ExecOnFile
@table @asis
@item Syntax:
@code{ExecOnFile <filearea> <filemask> <command>}
@item Example:
@code{ExecOnFile husky *.diff /usr/local/fido/update_source.sh}
@end table

Execute some command on receiving file. 
Command gets full filepath as parameter (space and file pathname should be
appended to command string before execution).

This statement cannot be repeated.

@node SaveTic, MaxTicLineLength, ExecOnFile, Keywords
@subsection SaveTic
@findex SaveTic
@table @asis
@item Syntax:
@code{SaveTic <FileEchoMask> <FileOption> <DirToSaveTic>}
@item Example:
@code{ExecOnFile husky -l /usr/local/husky}
@end table

@table @asis
@item <DirToSaveTic>
where put TIC for fileecho[es] <FileEchoMask>

@item <FileOption>
save files with tics. May be:

@table @asis
@item empty
files will not be copied

@end table
@table @option
@item -l
link files from fileechodir to <DirToSaveTic>

@item -c
copy files from fileechodir to <DirToSaveTic>
@end table

Options @option{-l} and @option{-c} work only for non-Passthrough file echos
@end table

This statement cannot be repeated.

@node MaxTicLineLength, BusyFileDir, SaveTic, Keywords
@subsection MaxTicLineLength
@findex MaxTicLineLength
@table @asis
@item Syntax:
@code{MaxTicLineLength <number>}
@item Example:
@code{MaxTicLineLength 79}
@end table

Set maximum line length in outgoing TICs to number.

This statement cannot be repeated.

@node BusyFileDir, ConvertLongNames, MaxTicLineLength, Keywords
@subsection BusyFileDir
@findex BusyFileDir
@table @asis
@item Syntax:
@code{BusyFileDir <directory>}
@item Example:
@code{BusyFileDir /var/spool/fido/htick.busy/}
@end table

Where shall be put TICs for busy links (default <outbound>/busy.htk).

This statement cannot be repeated.

@node ConvertLongNames, ConvertShortNames, BusyFileDir, Keywords
@subsection ConvertLongNames
@findex ConvertLongNames
@table @asis
@item Syntax:
@code{ConvertLongNames <Upper|Lower|DontTouch>}
@item Example:
@code{ConvertLongNames DontTouch}
@end table

What to do with long names when toss or hatch.
Saying 'long name' we mean a mixed cased name or a name longer than 8.3

This statement cannot be repeated.

@node ConvertShortNames, addDLC, ConvertLongNames, Keywords
@subsection ConvertShortNames
@findex ConvertShortNames
@table @asis
@item Syntax:
@code{ConvertShortNames <Upper|Lower|DontTouch>}
@item Example:
@code{ConvertShortNames DontTouch}
@end table

What to do with short names when toss or hatch.
Saying 'short name' we mean a DOS-like name: 8.3, without mixed case.

This statement cannot be repeated.

@node addDLC, DLCDigits, ConvertShortNames, Keywords
@subsection addDLC
@findex addDLC
@table @asis
@item Syntax:
@code{addDLC <bool>}
@item Example:
@code{addDLC yes}
@end table

Add Download counters ([000]) to files.bbs. Use with DLCDigits only!

This statement cannot be repeated.

@node DLCDigits, ticOutbound, addDLC, Keywords
@subsection DLCDigits
@findex DLCDigits
@table @asis
@item Syntax:
@code{DLCDigits <number>}
@item Example:
@code{DLCDigits 4}
@end table

How much digits DLC must be. DLC has [000] form.

This statement cannot be repeated.

@node ticOutbound, filefixKillReports, DLCDigits, Keywords
@subsection ticOutbound
@findex ticOutbound
@table @asis
@item Syntax:
@code{ticOutbound <directory>}
@item Example:
@code{ticOutbound /var/spool/fido/ticOub}
@end table

TICs are stored here and killed after transmission. Default: use PassFileAreaDir value

This statement cannot be repeated.

@node filefixKillReports, filefixKillRequests, ticOutbound, Keywords
@subsection filefixKillReports
@findex filefixKillReports
@table @asis
@item Syntax:
@code{filefixKillReports <bool>}
@item Example:
@code{filefixKillReports yes}
@end table

Set kill/sent flag to filefix replies.

This statement cannot be repeated.

@node filefixKillRequests, bbsarea, filefixKillReports, Keywords
@subsection filefixKillRequests
@findex filefixKillRequests
@table @asis
@item Syntax:
@code{filefixKillRequests <bool>}
@item Example:
@code{filefixKillRequests yes}
@end table

Kill filefix request after processing.

This statement cannot be repeated.

@node bbsarea, fileDescName, filefixKillRequests, Keywords
@subsection bbsarea
@findex bbsarea
@table @asis
@item Syntax:
@code{bbsarea <name> <bbsareapath>}
@item Example:
@code{bbsarea bbs /var/spool/fido/fileareas/bbsarea}
@end table

File area without subscribing, not shown in filefix reports.
Use for fileleist generation only ("htick filelist" command).

This statement cannot be repeated.

@node fileDescName, FileAreaCreatePerms, bbsarea, Keywords
@subsection fileDescName
@findex fileDescName
@table @asis
@item Syntax:
@code{fileDescName <name>}
@item Example:
@code{fileDescName file_id.diz}
@end table

If no LDESC defined in tic file, use <name> file from archive fill it 
(usually file_id.diz). 'unpack' action should be defined for archive
and contain @code{$f} parameter.

This statement cannot be repeated.

@node FileAreaCreatePerms, FileFixFromName, fileDescName, Keywords
@subsection FileAreaCreatePerms
@findex FileAreaCreatePerms
@table @asis
@item Syntax:
@code{FileAreaCreatePerms <mode>}
@item Example:
@code{FileAreaCreatePerms 644}
@end table

Define permissions for newly created filearea directories (UNIX only)

This statement cannot be repeated.

@node FileFixFromName, AutoFileCreateFlag, FileAreaCreatePerms, Keywords
@subsection FileFixFromName
@findex FileFixFromName
@table @asis
@item Syntax:
@code{FileFixFromName <string>}
@item Example:
@code{FileFixFromName <string>}
@end table

Originator name in filefix replies.

This statement cannot be repeated.

@node AutoFileCreateFlag, FileFixNames, FileFixFromName, Keywords
@subsection AutoFileCreateFlag
@findex AutoFileCreateFlag
@table @asis
@item Syntax:
@code{AutoFileCreateFlag <file>}
@item Example:
@code{AutoFileCreateFlag /usr/local/fido/flags/new_filearea}
@end table

Create flag when filearea has been autocreated.

This statement cannot be repeated.

@node FileFixNames, Link Keywords, AutoFileCreateFlag, Keywords
@subsection FileFixNames
@findex FileFixNames
@table @asis
@item Syntax:
@code{FileFixNames <string>}
@item Example:
@code{FileFixNames allfix filefix htick}
@end table

Set of names separated by space on which FileFix will respond

This statement cannot be repeated.

@node Link Keywords, fileEchoFlavour, FileFixNames, Configuration Reference
@section Link Keywords

@menu
* fileEchoFlavour::         This statement sets the flavour which outgoing files in fileechos for this linkget.
* fileAreaDefaults::        Set defaults for filearea definitions that follow. 
* RemoteFileRobotName::     Name of remote filefix robot (need for FileForwardRequest)
* FileFixEchoLimit::        Area subscription limit
* noTIC::                   Disable TIC file creation
* autoFileCreate::          Allow or deny autocreating fileechoes received from
                            this link.
* AutoFileCreateFile::      Specifies the file new filearea will be placed into
* AutoFileCreateDefaults::  Specifies the new filearea defaults.
* AutoFileCreateSubdirs::   Whether to autocreate areas like /filebase/gfd.app.edit (off) or /filebase/gfd/app/edit (on).
* delNotRecievedTIC::       If file not received, then remove TIC
* FileFixFSC87Subset::      This boolean switch will change on a per link basis how TIC files are processed.
* TickerPackToBox::         If link has file box - toss files and tics there
* LinkFileBaseDir::         Where autocreated fileareas will be placed
* ForwardFileRequests::     Allow file areas subscribe requests forward to this link.
* ForwardFilePriority::     Priority in uplinks order for filearea subscribing forward-requests
* ForwardFileRequestFile::  List of available fileareas from this link
* FileFixEchoLimit::        Area subscribe limit (max fileareas number allowed for this link subscribe)
@end menu

@node fileEchoFlavour, fileAreaDefaults, Link Keywords, Link Keywords
@subsection fileEchoFlavour
@findex fileEchoFlavour
@table @asis
@item Syntax:
@code{fileEchoFlavour <hold|normal|crash|direct|immediate>}
@item Example:
@code{fileEchoFlavour direct}
@end table

This statement sets the flavour which outgoing files in fileechos for this link get.
For example set @code{fileEchoFlavour} to hold for points and to crash for uplinks.

This statement can only be repeated for different links.

@node fileAreaDefaults, RemoteFileRobotName, fileEchoFlavour, Link Keywords
@subsection fileAreaDefaults
@findex fileAreaDefaults
@table @asis
@item Syntax:
@code{fileAreaDefaults <options> [links]}
@item Example:
@code{fileAreaDefaults -lw 100 -g Z 2:5097/31.1}
@end table

Set defaults for filearea definitions that follow. All options are possible, 
Set defaults for filearea definitions that follow. All options are possible,
except areatag and path.
Settings in the filearea definition override @code{fileAreaDefaults}
See also @xref{echoAreaDefaults,,,hpt}. Defaults are switched off
with empty @code{fileAreaDefaults}.

This statement can only be repeated for different links.

@node RemoteFileRobotName, noTIC, fileAreaDefaults, Link Keywords
@subsection RemoteFileRobotName
@findex RemoteFileRobotName
@table @asis
@item Syntax:
@code{RemoteFileRobotName <name>}
@item Example:
@code{RemoteFileRobotName allfix}
@end table

Name of remote filefix robot (need for FileForwardRequest)

This statement can only be repeated for different links.

@node noTIC, autoFileCreate, RemoteFileRobotName, Link Keywords
@subsection noTIC
@findex noTIC
@table @asis
@item Syntax:
@code{noTIC <bool>}
@item Example:
@code{noTIC yes}
@end table

Disable TIC File Creation

This statement can only be repeated for different links.

@node autoFileCreate, AutoFileCreateFile, noTIC, Link Keywords
@subsection autoFileCreate
@findex autoFileCreate
@table @asis
@item Syntax:
@code{autoFileCreate <on|off>}
@item Example:
@code{autoFileCreate on}
@end table

Allow or deny autocreating fileechoes received from this link.

This statement can only be repeated for different links.

@node AutoFileCreateFile, AutoFileCreateDefaults, autoFileCreate, Link Keywords
@subsection AutoFileCreateFile
@findex AutoFileCreateFile
@table @asis
@item Syntax:
@code{AutoFileCreateFile <file>}
@item Example:
@code{AutoFileCreateFile /usr/local/fido/hpt/config.filefix}
@end table

Specifies the file new filearea definitions will be placed into

This statement can only be repeated for different links.

@node AutoFileCreateDefaults, AutoFileCreateSubdirs, AutoFileCreateFile, Link Keywords
@subsection AutoFileCreateDefaults
@findex AutoFileCreateDefaults
@table @asis
@item Syntax:
@code{AutoFileCreateDefaults <string>}
@item Example:
@code{AutoFileCreateDefaults -lw 100 -g Z}
@end table

Specifies the new filearea defaults.

This statement can only be repeated for different links.

@node AutoFileCreateSubdirs, delNotRecievedTIC, AutoFileCreateDefaults, Link Keywords
@subsection AutoFileCreateSubdirs
@findex AutoFileCreateSubdirs
@table @asis
@item Syntax:
@code{AutoFileCreateSubdirs <on|off>}
@item Example:
@code{AutoFileCreateSubdirs on}
@end table

Whether to autocreate areas like /filebase/gfd.app.edit (off) or /filebase/gfd/app/edit (on). 
If you want to configure this globally instead of on per-link basis, set this in the deflink
section. For more information see 'AutoAreaCreateSubdirs' in the hpt manual.

This statement can only be repeated for different links.

@node delNotRecievedTIC, FileFixFSC87Subset, AutoFileCreateSubdirs, Link Keywords
@subsection delNotRecievedTIC
@findex delNotRecievedTIC
@table @asis
@item Syntax:
@code{delNotRecievedTIC <on|off>}
@item Example:
@code{delNotRecievedTIC on}
@end table

If file not received, then remove TIC

This statement can only be repeated for different links.

@node FileFixFSC87Subset, TickerPackToBox, delNotRecievedTIC, Link Keywords
@subsection FileFixFSC87Subset
@findex FileFixFSC87Subset
@table @asis
@item Syntax:
@code{FileFixFSC87Subset <on|off>}
@item Example:
@code{FileFixFSC87Subset on}
@end table

This boolean switch will change on a per link basis how TIC files are processed. By default
this switch is ON. htick will then operate only on FSC87-compliant keywords and ignore unknown 
keywords in the TIC file processed. If this switch is set to OFF all implemented keywords will
be used which can (and, in interaction with some tick processors, WILL) lead to severe problems.
Unknown keywords found in a TIC file will make htick stop processing that file. If you don't
know what all this is about set FileFixFSC87Subset to ON for all your links. It won't hurt.

This statement can only be repeated for different links.

@node TickerPackToBox, LinkFileBaseDir, FileFixFSC87Subset, Link Keywords
@subsection TickerPackToBox
@findex TickerPackToBox
@table @asis
@item Syntax:
@code{TickerPackToBox <on|off>}
@item Example:
@code{TickerPackToBox on}
@end table

If link has file box - toss files and tics there

This statement can only be repeated for different links.

@node LinkFileBaseDir, ForwardFileRequests, TickerPackToBox, Link Keywords
@subsection LinkFileBaseDir
@findex LinkFileBaseDir
@table @asis
@item Syntax:
@code{LinkFileBaseDir <directory>}
@item Example:
@code{LinkFileBaseDir /usr/local/fido/fileareas/2.5097.64.0}
@end table

Where autocreated fileareas will be placed (may be "passthrough")

This statement can only be repeated for different links.

@node ForwardFileRequests, ForwardFilePriority, LinkFileBaseDir, Link Keywords
@subsection ForwardFileRequests
@findex ForwardFileRequests
@table @asis
@item Syntax:
@code{ForwardFileRequests <on|off>}
@item Example:
@code{ForwardFileRequests on}
@end table

Allow file areas subscribe requests forward to this link.

This statement can only be repeated for different links.

@node ForwardFilePriority, ForwardFileRequestFile, ForwardFileRequests, Link Keywords
@subsection ForwardFilePriority
@findex ForwardFilePriority
@table @asis
@item Syntax:
@code{ForwardFilePriority <number>}
@item Example:
@code{ForwardFileRequests 1}
@end table

Priority in uplinks order for filearea subscribing forward-requests

This statement can only be repeated for different links.

@node ForwardFileRequestFile, FileFixEchoLimit, ForwardFilePriority, Link Keywords
@subsection ForwardFileRequestFile
@findex ForwardFileRequestFile
@table @asis
@item Syntax:
@code{ForwardFileRequestFile <file>}
@item Example:
@code{ForwardFileRequestFile /usr/local/fido/hpt/uplink1.lst}
@end table

List of available fileareas from this link

This statement can only be repeated for different links.

@node FileFixEchoLimit, FileArea Definition, ForwardFileRequestFile, Link Keywords
@subsection FileFixEchoLimit
@findex FileFixEchoLimit
@table @asis
@item Syntax:
@code{FileFixEchoLimit <number>}
@item Example:
@code{FileFixEchoLimit 10}
@end table

Area subscribe limit (max fileareas number this link is allowed to subscribe to)

This statement can only be repeated for different links.

@node FileArea Definition, FileArea, FileFixEchoLimit, Configuration Reference
@section FileArea Definition

@menu
* FileArea::                     definition of FileArea
@end menu

@node FileArea, Keyword Index, FileArea Definition, FileArea Definition
@subsection FileArea
@findex FileArea
@table @asis
@item Syntax:
@code{FileArea <name> <fileareapath> [options] <uplink> <downlinks>}
@item Example:
@code{FileArea husky /var/spool/fido/fileareas/husky -a 2:5097/31 -p 28 -g Z -d "HUSKY fileecho" 2:5097/64 2:5097/303}
@end table

Same as EchoArea, most options are valid:

a) -a <address>  Our own address

b) -lr <number>  "Read level": Min link level for sending files from this filearea to this link.

c) -lw <number>  "Write level": Min link level allowed to post into this filearea files received from link.

d) -h            Hide area (non visible in %LIST and in announce)

e) -manual       Disallow remote subscribe (disable subscribe areafix command).

f) -mandatory    Disallow remote unsubscribe (disable unsubscribe areafix command).

g) -sendorig     Set: send files from PassFileAreaDir for non passthrough areas.

h) -nopause      %PAUSE has no effect to this filearea

j) -noCRC        Disable CRC check for incoming files

k) -g <group>    Group for this filearea

l) -d "<string>" Description for this filearea

m) -noreplace    Don't replace exisiting files in this filearea.

n) -nodiz	 Do not try to get file description from <fileDescName> (for packed files).

o) -p <integer>  Purge after n days. Setting to 0 to disables purging.

@node Keyword Index, , FileArea, Top
@appendix Configuration File Keyword Index
@printindex fn

@bye
